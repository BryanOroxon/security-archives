// This file has been autogenerated from a class added in the UI designer.

using System;
using AVFoundation;
using CoreMedia;
using Foundation;
using UIKit;

namespace Archives
{
	public partial class PreviewViewController : UIViewController
	{
		public static NSDictionary SelectedMedia
		{
			get;
			set;
		}

		public PreviewViewController(IntPtr handle) : base(handle)
		{
			//NavigationItem.Title = "Preview";
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			//NavigationItem.SetRightBarButtonItem(new UIBarButtonItem(UIBarButtonSystemItem.Save, (sender, e) =>
			//{
			//	AddPicture();
			//}), true);

			string type = SelectedMedia[UIImagePickerController.MediaType].ToString();
			string url = string.Empty;
			NSUrl referenceURL = SelectedMedia[new NSString("UIImagePickerControllerReferenceURL")] as NSUrl;
			if (referenceURL != null)
				url = referenceURL.ToString();
			string trace = string.Format("Type: {0} Reference URL: {1}", type, url);
			Console.WriteLine(trace);

			switch (type)
			{
				case "public.image":
					break;
				case "public.video":
					break;
			}

			PreviewImage.Image = SelectedMedia[UIImagePickerController.OriginalImage] as UIImage;
		}

		void AddPicture()
		{
			throw new NotImplementedException();
		}

		partial void CancelTouchUpInside(NSObject sender)
		{
			UIViewController archives = Storyboard.InstantiateViewController("ArchivesNavigationController");
			PresentViewController(archives, true, null);
		}

		partial void ChooseTouchUpInside(NSObject sender)
		{
			
		}
	}
}
