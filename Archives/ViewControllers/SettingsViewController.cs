// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using System.Collections.Generic;
using Archives.Entities;
using Archives.Sources;
using System.Threading.Tasks;
using Archives.Helpers;
using CoreFoundation;

namespace Archives.ViewControllers
{
	public partial class SettingsViewController : UITableViewController
	{
		private bool _isPasscodeEnabled = false;
		private List<Setting> settings = new List<Setting>();
		private UIAlertController alert = null;

		public SettingsViewController(IntPtr handle) : base(handle)
		{
			NavigationItem.Title = "Settings";
		}

		public override void ViewDidLoad()
		{
			settings.Add(new Setting("security_cell", "Security", "SecurityViewController"));
			var settingsSource = new SettingsTableSource(settings, this);
			settingsSource.ViewControllerEvent += ViewControllerEvent;
			SettingsTableView.Source = settingsSource;
			SettingsTableView.AllowsMultipleSelection = false;
		}

		public async Task ViewControllerEvent(object sender, Setting e)
		{
			try
			{
				await AkavacheHelper.TryGetObject<bool>("IsPasscodeEnabled").ContinueWith((a) =>
				{
					_isPasscodeEnabled = a.Result;

					DispatchQueue.MainQueue.DispatchAsync(() =>
					{
						if ((e.Name == "Security") && (_isPasscodeEnabled))
						{
							ValidatePasscodeViewController validate = (ValidatePasscodeViewController)Storyboard.InstantiateViewController("ValidatePasscodeViewController");
							validate.TargetViewController = "SecurityViewController";
							validate.Navigation = NavigationController;
							PresentViewController(validate, true, null);
						}
						else
						{
							UIViewController uiviewcontroller = Storyboard.InstantiateViewController(e.TargetViewController);
							NavigationController.PushViewController(uiviewcontroller, true);
						}

					});
				});
			}
			catch
			{
				alert = UIAlertController.Create("Oops!", "There was a problem redirecting to the view", UIAlertControllerStyle.Alert);
				alert.AddAction(UIAlertAction.Create("Accept", UIAlertActionStyle.Cancel, null));
				PresentViewController(alert, true, null);
			}
		}
	}
}
