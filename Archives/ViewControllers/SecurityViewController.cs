// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Archives.Storage;
using UIKit;
using NomadCode.UIExtensions;
using Foundation;
using Archives.TableViewCells;

namespace Archives.ViewControllers
{
	public partial class SecurityViewController : UITableViewController
	{
		private bool _isPasscodeEnabled = false;
		private bool _isTouchIDEnabled = false;
        private bool _isFaceRecognitionEnabled = false;
		private List<string> Items { get; set; } = new List<string>();
		public bool IsCommingFromSetPasscode = false;

		public SecurityViewController(IntPtr handle) : base(handle) { }

		public override void LoadView()
		{
			base.LoadView();
			_isPasscodeEnabled = Settings.BoolForKey(Constants.__SECURITY_ISPASSCODEENABLED__);
			_isTouchIDEnabled = Settings.BoolForKey(Constants.__SECURITY_ISTOUCHIDENABLED__);
            _isFaceRecognitionEnabled = Settings.BoolForKey(Constants.__SECURITY_ISFACERECOGNITIONENABLED__);

			if (_isPasscodeEnabled)
			{
				var uiview = Storyboard.Instantiate<ValidatePasscodeViewController>();
				uiview.Navigation = NavigationController;
				PresentViewController(uiview, false, null);
			}
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			this.Title = Constants.__TITLE_SECURITY__;
			Items.Add("Passcode");
			Items.Add("Touch ID");
			Items.Add("Face Recognition");
		}

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);

			if (IsCommingFromSetPasscode)
			{
				var passcode = Keychain.GetItemFromKeychain(Keychain.AuthService).PrivateKey;
				bool hasPasscode = (passcode != null) ? true : false;

				if (!hasPasscode)
				{
					//get passcode switch value
					NSIndexPath passcode_idx = NSIndexPath.FromRowSection(0, 0);
					UITableViewCell passcode_cell = TableView.CellAt(passcode_idx);
					((UISwitch)passcode_cell.AccessoryView).On = false;

					//get touchid switch value
					NSIndexPath touchid_idx = NSIndexPath.FromRowSection(1, 0);
					UITableViewCell touchid_cell = TableView.CellAt(touchid_idx);
					((UISwitch)touchid_cell.AccessoryView).On = false;
					((UISwitch)touchid_cell.AccessoryView).Enabled = false;
				}
			}
		}

		public override nint NumberOfSections(UITableView tableView) => 1;

		public override nint RowsInSection(UITableView tableView, nint section) => Items.Count;

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			var cell = tableView.Dequeue<SecurityTableViewCell>(indexPath);
			var item = Items[indexPath.Row];

			cell.AccessoryView.Tag = indexPath.Row;
			cell.TextLabel.Text = item;

			if (indexPath.Row == 0)
			{
				((UISwitch)cell.AccessoryView).On = _isPasscodeEnabled;
			}

			if (indexPath.Row == 1)
			{
				((UISwitch)cell.AccessoryView).On = _isTouchIDEnabled;
				((UISwitch)cell.AccessoryView).Enabled = ((_isPasscodeEnabled) || (_isTouchIDEnabled)) ? true : false;
			}

            if (indexPath.Row == 2)
            {
				((UISwitch)cell.AccessoryView).On = _isPasscodeEnabled;
            }

            return cell;
		}

		partial void switchCellValueChanged(UISwitch sender)
		{
			var uiswitch = sender as UISwitch;

			if ((int)uiswitch.Tag == 0)
			{
				//delete passcode from secure internal storage
				Keychain.RemoveItemFromKeychain(Keychain.AuthService);

				if (uiswitch.On)
				{
					//get touchid switch value
					NSIndexPath touchid_idx = NSIndexPath.FromRowSection(1, 0);
					UITableViewCell touchid_cell = TableView.CellAt(touchid_idx);
					((UISwitch)touchid_cell.AccessoryView).Enabled = true;

					//update flag
					IsCommingFromSetPasscode = true;

					//go and set a new passcode
					UIViewController uiview = Storyboard.InstantiateViewController("SetPasscodeViewController");
					NavigationController.PushViewController(uiview, true);
				}
				else
				{
					//get touchid switch value
					NSIndexPath touchid_idx = NSIndexPath.FromRowSection(1, 0);
					UITableViewCell touchid_cell = TableView.CellAt(touchid_idx);
					((UISwitch)touchid_cell.AccessoryView).On = false;
					((UISwitch)touchid_cell.AccessoryView).Enabled = false;

					UpdateSettings();
				}
			}
			else if ((int)uiswitch.Tag == 2)
			{
				//go and set a new face recognition configuration
				UIViewController uiview = Storyboard.InstantiateViewController("PeopleViewController");
				NavigationController.PushViewController(uiview, true);
			}
			else
				UpdateSettings();
		}

		private void UpdateSettings()
		{
			UpdatePasscode();
			UpdateTouchID();
		}

		private void UpdatePasscode()
		{
			//get passcode switch value
			NSIndexPath passcode_idx = NSIndexPath.FromRowSection(0, 0);
			UITableViewCell passcode_cell = TableView.CellAt(passcode_idx);
			var passcode_value = ((UISwitch)passcode_cell.AccessoryView).On;

			//save passcode feature
			Settings.SetSetting(Constants.__SECURITY_ISPASSCODEENABLED__, passcode_value);
		}

		private void UpdateTouchID()
		{
			//get touchid switch value
			NSIndexPath touchid_idx = NSIndexPath.FromRowSection(1, 0);
			UITableViewCell touchid_cell = TableView.CellAt(touchid_idx);
			var touchid_value = ((UISwitch)touchid_cell.AccessoryView).On;

			//save touch id feature
			Settings.SetSetting(Constants.__SECURITY_ISTOUCHIDENABLED__, touchid_value);
		}
	}
}