// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Reactive;
using System.Threading.Tasks;
using Akavache;
using Archives.Helpers;
using Archives.Models;
using Archives.Sources;
using Foundation;
using UIKit;

namespace Archives.ViewControllers
{
	public partial class SecurityViewController : UITableViewController
	{
		private bool _isPasscodeEnabled = false;
		private bool _isTouchIDEnabled = false;
		private List<SecurityFeature> features = new List<SecurityFeature>();
		public static bool IsCommingFromSetPasscode = false;

		public SecurityViewController(IntPtr handle) : base(handle) { }

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			this.Title = "Security";
			features.Add(new SecurityFeature("Passcode", false, true));
			features.Add(new SecurityFeature("Touch ID", false, false));
			var source = new SecurityFeaturesTableSource(features, featuresTableView, this);
			featuresTableView.Source = source;

			Task.Run(async () =>
			{
				await Initialize();
			});
		}

		private async Task Initialize()
		{
			_isPasscodeEnabled = await AkavacheHelper.TryGetObject<bool>("IsPasscodeEnabled");
			_isTouchIDEnabled = await AkavacheHelper.TryGetObject<bool>("IsTouchIDEnabled");

			BeginInvokeOnMainThread(() =>
			{
				features[0].Selected = _isPasscodeEnabled;
				features[1].Selected = _isTouchIDEnabled;
				features[1].Enabled = ((features[1].Selected) || (features[0].Selected)) ? true : false;
				featuresTableView.ReloadData();
			});
		}

		public override void ViewWillAppear(Boolean animated)
		{
			if (IsCommingFromSetPasscode)
			{
				Task.Run(async () =>
				{
					await Initialize();
				});
				IsCommingFromSetPasscode = false;
			}
		}

	}
}
